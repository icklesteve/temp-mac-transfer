name: PR Label Management and Do Not Merge

on:
  pull_request:
    types: [opened, reopened, labeled, unlabeled]
  schedule:
    - cron: '0 * * * *'  # Runs hourly; adjust as needed

env:
  PR_LABEL: 'New BR'

jobs:
  do-not-merge:
    runs-on: ubuntu-latest
    steps:
    
      - name: Check PR creation time
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labelName = process.env.PR_LABEL;

            const createdAt = new Date(pr.created_at);
            const now = new Date();

            const hoursSinceCreation = (now - createdAt) / (1000 * 60 * 60);

            if (hoursSinceCreation <= 0.5) {
              console.log(`Adding Label "${labelName}".`);
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [labelName]
              });
            } else {
              console.log(`More than 24 hours since PR creation. No action taken.`);
            }

    
      - name: Handle PR event (real-time)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labelName = process.env.PR_LABEL;
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number
            });
            const labelNames = labels.data.map(l => l.name);
            if (labelNames.includes(labelName)) {
              core.setFailed(`❌ This pull request is labeled "${labelName}" and cannot be merged.`);
            } else {
              console.log('PR is mergeable.');
            }

      - name: Handle scheduled event (batch)
        if: github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelToRemove = process.env.PR_LABEL;
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });
            const now = new Date();
            for (const pr of prs.data) {
              const createdAt = new Date(pr.created_at);
              const hoursSinceCreation = (now - createdAt) / (1000 * 60 * 60);
              const labelNames = pr.labels.map(l => l.name);
              // Remove label if PR is older than 0.5 hours and label is present
              if (hoursSinceCreation > 0.5 && labelNames.includes(labelToRemove)) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  name: labelToRemove
                });
                console.log(`Removed "${labelToRemove}" from PR #${pr.number}`);
              }
              // After removal, re-fetch labels and check for "Do Not Merge"
              const { data: refreshedLabels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number
              });
              const refreshedLabelNames = refreshedLabels.map(l => l.name);
              if (refreshedLabelNames.includes(labelToRemove)) {
                core.setFailed(`❌ PR #${pr.number} is labeled '${labelToRemove}' and cannot be merged.`);
              }
            }
