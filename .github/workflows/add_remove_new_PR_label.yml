name: New PR Label

on:
  pull_request:
    types: [opened, reopened, unlabeled]

  schedule:
    # - cron: '0 * * * *' # Runs every hour
    - cron: '10,22,34,46,58 * * * *' # Runs every 12 mins

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check-add-new-pr-label:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check PR creation time
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labelName = 'New PR';

            const createdAt = new Date(pr.created_at);
            const now = new Date();

            const hoursSinceCreation = (now - createdAt) / (1000 * 60 * 60);

            if (hoursSinceCreation <= 1) {
              console.log(`Adding Label "${labelName}".`);
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: [labelName]
              });
            } else {
              console.log(`More than 24 hours since PR creation. No action taken.`);
            }

  check-remove-newpr-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Remove "New PR" label if PR is older than 24 hours
        uses: actions/github-script@v7
        with:
          script: |
            const labelToRemove = 'New PR';

            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });

            const now = new Date();

            for (const pr of prs.data) {
              const createdAt = new Date(pr.created_at);
              const hoursSinceCreation = (now - createdAt) / (1000 * 60 * 60);

              if (hoursSinceCreation > 1) {
                const labels = pr.labels.map(l => l.name);
                if (labels.includes(labelToRemove)) {
                  console.log(`Removing "${labelToRemove}" from PR #${pr.number} (created ${hoursSinceCreation.toFixed(2)} hours ago)`);

                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    name: labelToRemove
                  });
                }
              }
            }
